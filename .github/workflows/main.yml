name: CI

on: [push, pull_request]

jobs:
  mix_test:
    name: mix test (Elixir ${{matrix.elixir}} | Erlang/OTP ${{matrix.erlang}})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include:
          - erlang: "25.2"
            elixir: "1.14.2"
          - erlang: "24.1"
            elixir: "1.13"
          - erlang: "22.2"
            elixir: "1.11"
            warnings_as_errors: true
            check_formatted: true
            health: true
    env:
      MIX_ENV: test
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-elixir@v1
        with:
          otp-version: ${{matrix.erlang}}
          elixir-version: ${{matrix.elixir}}
      - name: Install Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only test
      - run: mix format --check-formatted
        if: matrix.check_formatted
      - run: mix compile --warnings-as-errors
        if: matrix.warnings_as_errors
      - run: mix credo --strict
        if: matrix.health
      - run: mix test
        env:
          AKISMET_KEY: ${{ secrets.AKISMET_KEY }}
  static_analysis:
    name: static analysis (Elixir ${{matrix.elixir}} | Erlang/OTP ${{matrix.erlang}})
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        include:
          - elixir: "1.14.2"
            erlang: "25.2"
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.erlang}}
          elixir-version: ${{matrix.elixir}}
      - name: Cache build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ~/.hex
            ~/.mix
            _build
          key: ${{ matrix.erlang }}-${{ matrix.elixir }}-static_analysis-build
      - name: Install Dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get
      - run: mix doctor
      - run: mix dialyzer
